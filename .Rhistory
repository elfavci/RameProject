main = "Avrupa Satışları ile Global Satışlar Arasındaki Korelasyon")
#Kuzey Amerika Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$na_sales, data_clean$global_sales,
xlab = "Kuzey Amerika Satışları", ylab = "Global Satışlar",
main = "Kuzey Amerika Satışları ile Global Satışlar Arasındaki Korelasyon")
#Diğer Satışlar ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$other_sales, data_clean$global_sales,
xlab = "Diğer Satışlar", ylab = "Global Satışlar",
main = "Diğer Satışlar ile Global Satışlar Arasındaki Korelasyon")
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NAs = sum(data_clean$na_sales),
EU = sum(data_clean$eu_sales),
JP = sum(data_clean$jp_sales),
Other = sum(data_clean$other_sales)
)
# Pasta grafiği oluştur
pie_data <- data.frame(
region = names(sales_by_region),
sales = sales_by_region / total_global_sales
)
# Pasta grafiğini çiz
pie_chart <- ggplot(pie_data, aes(x = "", y = sales, fill = region)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Global Satışların Bölgeye Göre Dağılımı") +
theme_void() +
theme(legend.position = "bottom")
# Pasta grafiğini görüntüle
print(pie_chart)
#Merkezi eğilim ölçütleri
mean_sales <- mean(data_clean$global_sales)
median_sales <- median(data_clean$global_sales)
print(mean_sales)
print(median_sales)
#Yayılma ölçütleri
standart_deviation <- sd(data_clean$global_sales)
variance <- var(data_clean$global_sales)
print(standart_deviation)
print(variance)
#Korelasyon Analizi
correlation_jp_global <- cor(data_clean$jp_sales, data_clean$global_sales)
print(correlation_jp_global)
#Korelasyon Analizi
correlation_eu_global <- cor(data_clean$eu_sales, data_clean$global_sales)
print(correlation_eu_global)
#Korelasyon Analizi
correlation_na_global <- cor(data_clean$na_sales, data_clean$global_sales)
print(correlation_na_global)
#Korelasyon Analizi
correlation_other_global <- cor(data_clean$other_sales, data_clean$global_sales)
print(correlation_other_global)
#Grafik alanını oluşturma
par(mfrow=c(2,2))  # 2x2 bir alt grafik düzeni oluşturur
#Japonya Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$jp_sales, data_clean$global_sales,
xlab = "Japonya Satışları", ylab = "Global Satışlar",
main = "Japonya Satışları ile Global Satışlar Arasındaki Korelasyon")
#Avrupa Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$eu_sales, data_clean$global_sales,
xlab = "Avrupa Satışları", ylab = "Global Satışlar",
main = "Avrupa Satışları ile Global Satışlar Arasındaki Korelasyon")
#Kuzey Amerika Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$na_sales, data_clean$global_sales,
xlab = "Kuzey Amerika Satışları", ylab = "Global Satışlar",
main = "Kuzey Amerika Satışları ile Global Satışlar Arasındaki Korelasyon")
#Diğer Satışlar ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$other_sales, data_clean$global_sales,
xlab = "Diğer Satışlar", ylab = "Global Satışlar",
main = "Diğer Satışlar ile Global Satışlar Arasındaki Korelasyon")
data <- read.csv("lastgame.csv")
#satır sayısını öğrenme
num_rows <- nrow(data)
print(num_rows)
#sutun sayısını öğrenme
num_cols <- ncol(data)
print(num_cols)
#Na değerlerini silme
data_clean <- na.omit(data)
data <- read.csv("lastgame.csv")
#satır sayısını öğrenme
num_rows <- nrow(data)
print(num_rows)
#sutun sayısını öğrenme
num_cols <- ncol(data)
print(num_cols)
#Na değerlerini silme
data_clean <- na.omit(data)
summary(data_clean)
#Merkezi eğilim ölçütleri
mean_sales <- mean(data_clean$global_sales)
median_sales <- median(data_clean$global_sales)
print(mean_sales)
print(median_sales)
#Yayılma ölçütleri
standart_deviation <- sd(data_clean$global_sales)
variance <- var(data_clean$global_sales)
print(standart_deviation)
print(variance)
#Korelasyon Analizi
correlation_jp_global <- cor(data_clean$jp_sales, data_clean$global_sales)
print(correlation_jp_global)
#Korelasyon Analizi
correlation_eu_global <- cor(data_clean$eu_sales, data_clean$global_sales)
print(correlation_eu_global)
#Korelasyon Analizi
correlation_na_global <- cor(data_clean$na_sales, data_clean$global_sales)
print(correlation_na_global)
#Korelasyon Analizi
correlation_other_global <- cor(data_clean$other_sales, data_clean$global_sales)
print(correlation_other_global)
#Grafik alanını oluşturma
par(mfrow=c(2,2))  # 2x2 bir alt grafik düzeni oluşturur
#Japonya Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$jp_sales, data_clean$global_sales,
xlab = "Japonya Satışları", ylab = "Global Satışlar",
main = "Japonya Satışları ile Global Satışlar Arasındaki Korelasyon",col= "red")
#Avrupa Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$eu_sales, data_clean$global_sales,
xlab = "Avrupa Satışları", ylab = "Global Satışlar",
main = "Avrupa Satışları ile Global Satışlar Arasındaki Korelasyon",col="cornflowerblue")
#Kuzey Amerika Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$na_sales, data_clean$global_sales,
xlab = "Kuzey Amerika Satışları", ylab = "Global Satışlar",
main = "Kuzey Amerika Satışları ile Global Satışlar Arasındaki Korelasyon",col="green")
#Diğer Satışlar ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$other_sales, data_clean$global_sales,
xlab = "Diğer Satışlar", ylab = "Global Satışlar",
main = "Diğer Satışlar ile Global Satışlar Arasındaki Korelasyon",col="magenta")
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NAs = sum(data_clean$na_sales),
EU = sum(data_clean$eu_sales),
JP = sum(data_clean$jp_sales),
Other = sum(data_clean$other_sales)
)
# Pasta grafiği oluştur
pie_data <- data.frame(
region = names(sales_by_region),
sales = sales_by_region / total_global_sales
)
# Pasta grafiğini çiz
pie_chart <- ggplot(pie_data, aes(x = "", y = sales, fill = region)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Global Satisların Bolgeye Gore Dagilimi") +
theme_void() +
theme(legend.position = "bottom")
# Pasta grafiğini görüntüle
print(pie_chart)
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NA = sum(data_clean$na_sales),
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NAs = sum(data_clean$na_sales),
EU = sum(data_clean$eu_sales),
JP = sum(data_clean$jp_sales),
Other = sum(data_clean$other_sales)
)
# Oranları hesapla
sales_percent <- sales_by_region / total_global_sales * 100
# Pasta grafiği için veri çerçevesi oluştur
pie_data <- data.frame(
region = names(sales_by_region),
sales = sales_by_region,
percent = sales_percent
)
# Pasta grafiğini çiz
pie_chart <- ggplot(pie_data, aes(x = "", y = sales, fill = region)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Global Satışların Bölgeye Göre Dağılımı") +
theme_void() +
theme(legend.position = "bottom") +
# Oranları pasta grafiği üzerine yazdır
geom_text(aes(label = paste0(round(percent, 1), "%")), position = position_stack(vjust = 0.5))
# Pasta grafiğini görüntüle
print(pie_chart)
#Regresyon Analizi
regression_model <- lm(global_sales ~ na_sales + eu_sales, data + jp_sales +other_sales = data_clean)
#Regresyon Analizi
regression_model <- lm(global_sales ~ na_sales + eu_sales + jp_sales +other_sales, regdata = data_clean)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ na_sales + eu_sales + jp_sales +other_sales, regdata = data_clean)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, regdata = data_clean)
summary(regression_model)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, data =  data_clean)
summary(regression_model)
#Merkezi eğilim ölçütleri
mean_sales <- mean(data_clean$global_sales)
median_sales <- median(data_clean$global_sales)
print(mean_sales)
print(median_sales)
#Yayılma ölçütleri
standart_deviation <- sd(data_clean$global_sales)
variance <- var(data_clean$global_sales)
print(standart_deviation)
print(variance)
#Korelasyon Analizi
correlation_jp_global <- cor(data_clean$jp_sales, data_clean$global_sales)
#print(correlation_jp_global)
#Korelasyon Analizi
correlation_eu_global <- cor(data_clean$eu_sales, data_clean$global_sales)
#print(correlation_eu_global)
#Korelasyon Analizi
correlation_na_global <- cor(data_clean$na_sales, data_clean$global_sales)
#print(correlation_na_global)
#Korelasyon Analizi
correlation_other_global <- cor(data_clean$other_sales, data_clean$global_sales)
#print(correlation_other_global)
#Grafik alanını oluşturma
par(mfrow=c(2,2))  # 2x2 bir alt grafik düzeni oluşturur
#Japonya Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$jp_sales, data_clean$global_sales,
xlab = "Japonya Satışları", ylab = "Global Satışlar",
main = "Japonya Satışları ile Global Satışlar Arasındaki Korelasyon",col= "red")
#Avrupa Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$eu_sales, data_clean$global_sales,
xlab = "Avrupa Satışları", ylab = "Global Satışlar",
main = "Avrupa Satışları ile Global Satışlar Arasındaki Korelasyon",col="cornflowerblue")
#Kuzey Amerika Satışları ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$na_sales, data_clean$global_sales,
xlab = "Kuzey Amerika Satışları", ylab = "Global Satışlar",
main = "Kuzey Amerika Satışları ile Global Satışlar Arasındaki Korelasyon",col="green")
#Diğer Satışlar ile Global Satışlar arasındaki korelasyon için scatter plot
plot(data_clean$other_sales, data_clean$global_sales,
xlab = "Diger Satışlar", ylab = "Global Satışlar",
main = "Diger Satışlar ile Global Satışlar Arasındaki Korelasyon",col="magenta")
# ggplot2 paketini yükle
library(ggplot2)
# Türlere göre satışları hesapla
sales_by_genre <- aggregate(cbind(na_sales, eu_sales, jp_sales, other_sales, global_sales) ~ genre, data = data_clean, sum)
# Bar grafiği için veri çerçevesi oluştur
genre_sales <- melt(sales_by_genre, id.vars = "genre", measure.vars = c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales"))
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NAs = sum(data_clean$na_sales),
EU = sum(data_clean$eu_sales),
JP = sum(data_clean$jp_sales),
Other = sum(data_clean$other_sales)
)
# Oranları hesapla
sales_percent <- sales_by_region / total_global_sales * 100
# Pasta grafiği için veri çerçevesi oluştur
pie_data <- data.frame(
region = names(sales_by_region),
sales = sales_by_region,
percent = sales_percent
)
# Pasta grafiğini çiz
pie_chart <- ggplot(pie_data, aes(x = "", y = sales, fill = region)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Global Satışların Bölgeye Göre Dağılımı") +
theme_void() +
theme(legend.position = "bottom") +
# Oranları pasta grafiği üzerine yazdır
geom_text(aes(label = paste0(round(percent, 1), "%")), position = position_stack(vjust = 0.5))
# Pasta grafiğini görüntüle
print(pie_chart)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, data =  data_clean)
summary(regression_model)
#Örnek veri oluşturma
new_data <- data.frame(
na_sales = 0.5,     # Örnek na_sales değeri
eu_sales = 0.3,     # Örnek eu_sales değeri
jp_sales = 0.2,     # Örnek jp_sales değeri
other_sales = 0.1   # Örnek other_sales değeri
)
#Modeli kullanarak yeni veri için tahmin yapma
predicted_sales <- predict(regression_model, newdata = new_data)
#Tahmin edilen satışları görüntüleme
print(predicted_sales)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, data =  data_clean)
#summary(regression_model)
#Örnek veri oluşturma
new_data <- data.frame(
na_sales = 0.5,     # Örnek na_sales değeri
eu_sales = 0.3,     # Örnek eu_sales değeri
jp_sales = 0.2,     # Örnek jp_sales değeri
other_sales = 0.1   # Örnek other_sales değeri
)
#Modeli kullanarak yeni veri için tahmin yapma
predicted_sales <- predict(regression_model, newdata = new_data)
#Tahmin edilen satışları görüntüleme
print(predicted_sales)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, data =  data_clean)
summary(regression_model)
# ggplot2 paketini yükle
library(ggplot2)
library(tidyr)
# Türlere göre satışları hesapla
sales_by_genre <- aggregate(cbind(na_sales, eu_sales, jp_sales, other_sales, global_sales) ~ genre, data = data_clean, sum)
# Bar grafiği için veri çerçevesi oluştur
genre_sales <- pivot_longer(sales_by_genre, cols = c(na_sales, eu_sales, jp_sales, other_sales), names_to = "region", values_to = "sales")
# Bar grafiğini çiz
bar_chart <- ggplot(genre_sales, aes(x = genre, y = sales, fill = region)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Tür", y = "Satış Miktarı", title = "Türlere Göre Satışlar") +
# ggplot2 paketini yükle
library(ggplot2)
library(tidyr)
# Türlere göre satışları hesapla
sales_by_genre <- aggregate(cbind(na_sales, eu_sales, jp_sales, other_sales, global_sales) ~ genre, data = data_clean, sum)
# Bar grafiği için veri çerçevesi oluştur
genre_sales <- pivot_longer(sales_by_genre, cols = c(na_sales, eu_sales, jp_sales, other_sales), names_to = "region", values_to = "sales")
# Bar grafiğini çiz
bar_chart <- ggplot(genre_sales, aes(x = genre, y = sales, fill = region)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Tur", y = "Satis Miktari", title = "Türlere Göre Satışlar") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("na_sales" = "#1f78b4", "eu_sales" = "#a6cee3", "jp_sales" = "#33a02c", "other_sales" = "#b2df8a")) +
guides(fill = guide_legend(title = "Bölge"))
# Bar grafiğini görüntüle
print(bar_chart)
# ggplot2 paketini yükle
library(ggplot2)
library(tidyr)
# Türlere göre satışları hesapla
sales_by_genre <- aggregate(cbind(na_sales, eu_sales, jp_sales, other_sales, global_sales) ~ genre, data = data_clean, sum)
# Bar grafiği için veri çerçevesi oluştur
genre_sales <- pivot_longer(sales_by_genre, cols = c(na_sales, eu_sales, jp_sales, other_sales), names_to = "region", values_to = "sales")
# Bar grafiğini çiz
bar_chart <- ggplot(genre_sales, aes(x = genre, y = sales, fill = region)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Tur", y = "Satis Miktari", title = "Türlere Gore Satışlar") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("na_sales" = "#1f78b4", "eu_sales" = "#a6cee3", "jp_sales" = "#33a02c", "other_sales" = "#b2df8a")) +
guides(fill = guide_legend(title = "Bolge"))
# Bar grafiğini görüntüle
print(bar_chart)
#Regresyon Analizi
regression_model <- lm(data_clean$global_sales ~ data_clean$na_sales + data_clean$eu_sales + data_clean$jp_sales +data_clean$other_sales, data =  data_clean)
#summary(regression_model)
#Hipotez Testleri (Örnek olarak, satışların yayıncıya göre farklılık gösterip göstermediğini test edelim)
anova_result <- aov(global_sales ~ publisher, data = data_clean)
summary(anova_result)
library(ggplot2)
# Global satışların toplamını hesapla
total_global_sales <- sum(data_clean$global_sales)
# Bölgeye göre satışları hesapla
sales_by_region <- c(
NAs = sum(data_clean$na_sales),
EU = sum(data_clean$eu_sales),
JP = sum(data_clean$jp_sales),
Other = sum(data_clean$other_sales)
)
# Oranları hesapla
sales_percent <- sales_by_region / total_global_sales * 100
# Pasta grafiği için veri çerçevesi oluştur
pie_data <- data.frame(
region = names(sales_by_region),
sales = sales_by_region,
percent = sales_percent
)
# Pasta grafiğini çiz
pie_chart <- ggplot(pie_data, aes(x = "", y = sales, fill = region)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
labs(title = "Global Satışların Bölgeye Göre Dağılımı") +
theme_void() +
theme(legend.position = "bottom") +
# Oranları pasta grafiği üzerine yazdır
geom_text(aes(label = paste0(round(percent, 1), "%")), position = position_stack(vjust = 0.5))
# Pasta grafiğini görüntüle
print(pie_chart)
library(stats)
#Veri setinizin yüklenmesi veya oluşturulması
#Örnek olarak, data_clean adında bir veri çerçevesi olduğunu varsayalım
#Kümeleme için kullanılacak değişkenleri seçme
features <- data_clean[, c("genre", "theme", "gameplay_features")]
library(stats)
#Veri setinizin yüklenmesi veya oluşturulması
#Örnek olarak, data_clean adında bir veri çerçevesi olduğunu varsayalım
#Kümeleme için kullanılacak değişkenleri seçme
features <- data_clean[, c("genre", "publisher", "platform")]
#Kümeleme modeli
k <- 3  # Küme sayısı
kmeans_model <- kmeans(features, centers = k)
library(stats)
#Veri setinizdeki genre, platform ve publisher değişkenlerini seçme
features <- data_clean[, c("genre", "platform", "publisher")]
#K-means kümeleme modeli oluşturma
k <- 3  # Küme sayısı
kmeans_model <- kmeans(features, centers = k)
library(stats)
#Veri setinizdeki benzersiz kombinasyonların sayısını bulma
unique_combinations <- unique(features)
#Benzersiz kombinasyonların sayısı
num_unique_combinations <- nrow(unique_combinations)
#Küme sayısını belirleme
k <- min(num_unique_combinations, 3)  # Örneğin, en fazla 3 küme belirtmek istiyoruz
#K-means kümeleme modeli oluşturma
kmeans_model <- kmeans(features, centers = k)
# Veri setinizdeki benzersiz kombinasyonların sayısını bulma
unique_combinations <- unique(features)
# Benzersiz kombinasyonların sayısı
num_unique_combinations <- nrow(unique_combinations)
# Küme sayısını belirleme
k <- min(num_unique_combinations, 3)  # Örneğin, en fazla 3 küme belirtmek istiyoruz
# K-means kümeleme modeli oluşturma
kmeans_model <- kmeans(features, centers = k)
# Veri setinizdeki benzersiz kombinasyonları kontrol etme
unique_combinations <- unique(features)
num_unique_combinations <- nrow(unique_combinations)
print(num_unique_combinations)
# Veri setinizdeki benzersiz kombinasyonları kontrol etme
unique_combinations <- unique(features)
num_unique_combinations <- nrow(unique_combinations)
#print(num_unique_combinations)
#Sadece "aksiyon" türüne ve "PS2" platformuna ait gözlemleri seçme
selected_data <- data_clean[data_clean$genre == "Action" & data_clean$platform == "PS2", ]
#Seçilen veri setini gösterme
print(head(selected_data))
#K-means kümeleme algoritmasını uygulama
kmeans_model <- kmeans(selected_data[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], centers = 3)
#Kümeleme modelini inceleme
print(kmeans_model)
#Küme merkezlerini ve kümelemeleri görselleştirmek için scatter plot oluşturma
library(ggplot2)
#Küme merkezlerini belirleme
cluster_centers <- as.data.frame(kmeans_model$centers)
#Küme merkezlerini görselleştirme
ggplot(data = selected_data, aes(x = jp_sales, y = global_sales)) +
geom_point(aes(color = as.factor(kmeans_model$cluster)), size = 3) +
geom_point(data = cluster_centers, aes(x = jp_sales, y = global_sales),
color = "black", size = 5, shape = 17) +
labs(title = "Kümeleme Sonuçları",
x = "Japonya Satışları",
y = "Global Satışlar",
color = "Küme") +
theme_minimal()
#K-means kümeleme algoritmasını uygulama
kmeans_model <- kmeans(selected_data[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], centers = 3)
#Kümeleme modelini inceleme
print(kmeans_model)
#Küme merkezlerini ve kümelemeleri görselleştirmek için scatter plot oluşturma
library(ggplot2)
library(stats)
#Küme merkezlerini belirleme
cluster_centers <- as.data.frame(kmeans_model$centers)
#Küme merkezlerini görselleştirme
ggplot(data = selected_data, aes(x = jp_sales, y = global_sales)) +
geom_point(aes(color = as.factor(kmeans_model$cluster)), size = 3) +
geom_point(data = cluster_centers, aes(x = jp_sales, y = global_sales),
color = "black", size = 5, shape = 17) +
labs(title = "Kümeleme Sonuçları",
x = "Japonya Satışları",
y = "Global Satışlar",
color = "Küme") +
theme_minimal()
#K-means kümeleme algoritmasını uygulama
kmeans_model <- kmeans(selected_data[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], centers = 3)
#Kümeleme modelini inceleme
print(kmeans_model)
#Küme merkezlerini ve kümelemeleri görselleştirmek için scatter plot oluşturma
library(ggplot2)
library(stats)
#Küme merkezlerini belirleme
cluster_centers <- as.data.frame(kmeans_model$centers)
#Küme merkezlerini görselleştirme
ggplot(data = selected_data, aes(x = jp_sales, y = global_sales)) +
geom_point(aes(color = as.factor(kmeans_model$cluster)), size = 3) +
geom_point(data = cluster_centers, aes(x = jp_sales, y = global_sales),
color = "black", size = 5, shape = 17) +
labs(title = "Kümeleme Sonuçları",
x = "Japonya Satışları",
y = "Global Satışlar",
color = "Küme") +
theme_minimal()
#K-means kümeleme algoritmasını uygulama
kmeans_model <- kmeans(selected_data[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], centers = 3)
#Kümeleme modelini inceleme
print(kmeans_model)
#Küme merkezlerini ve kümelemeleri görselleştirmek için scatter plot oluşturma
library(ggplot2)
library(stats)
#Küme merkezlerini belirleme
cluster_centers <- as.data.frame(kmeans_model$centers)
# Küme merkezlerini görselleştirme
ggplot(data = selected_data, aes(x = jp_sales, y = global_sales)) +
geom_point(aes(color = as.factor(kmeans_model$cluster)), size = 3) +
geom_point(data = cluster_centers, aes(x = jp_sales, y = global_sales),
color = "black", size = 5, shape = 17) +
labs(
title = "Kümeleme Sonuçları",
x = "Japonya Satışları",
y = "Global Satışlar",
color = "Küme"
